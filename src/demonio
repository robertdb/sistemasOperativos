#! /usr/bin/env bash

LOGFILE=demonio
source log.sh

if [ ! -v DIRABUS ]; then DIRABUS=dirabus; fi
if [ ! -d $DIRABUS ]; then mkdir --parents $DIRABUS; fi

if [ ! -v ACEPTADOS ]; then ACEPTADOS=aceptados; fi
if [ ! -d $ACEPTADOS ]; then mkdir --parents $ACEPTADOS; fi

if [ ! -v RECHAZADOS ]; then RECHAZADOS=rechazados; fi
if [ ! -d $RECHAZADOS ]; then mkdir --parents $RECHAZADOS; fi

# Rechaza un archivo y registra el evento en el log.
#
# El segundo argumento es un mensaje opcional que se agrega al log.
function rechazar() {
    mv ${1:?"rechazar llamado sin argumentos"} $RECHAZADOS
    log archivo rechazado: $(basename $1)${2:+, $2}
}

function aceptar() {
    mv ${1?"aceptar llamado sin argumentos"} $ACEPTADOS
    log archivo aceptado: $(basename $1)
}

function dateIsOk() {
    local filename=${1:?"dateIsOk llamado sin argumentos"}
    local noext=${filename%.*}
    local date=${noext#*_}

    # bash interpreta una funcion que retorna 0 como true, y otros retornos
    # como false
    # note que la expansion aritmetica es distinta a la expansion de comandos,
    # y que en expansion aritmetica (( 0 )) es false, y (( 1 )) es true
    if [[ $(date 2>&1 --date $date) =~ invalid ]]; then return 1; fi

    if [[ $date < $(date "+%Y%m%d") ]]; then return 0
    else return 1; fi
}

function procesarArchivo() {
    local name=$(basename $1)

    if ! [[ $name =~ [^_]+_[^_]+\.txt ]]; then
        rechazar $1 "nombre mal formado"; return; fi
    if ! [ -s $1 ]; then
        rechazar $1 "vacio"; return; fi
    if ! [[ $(file $1) =~ ASCII ]]; then
        rechazar $1 "no es ASCII"; return; fi
    if ( ! dateIsOk $name ); then
        rechazar $1 "mala fecha"; return; fi

    aceptar $1
}

for (( i = 1; ; i++ )); do
    log $i
    if [ $(($i%100)) -eq 0 ]; then truncate; fi

    sleep 1

    if [ -z $(ls -A $DIRABUS) ]; then continue; fi
    for file in $DIRABUS/*; do procesarArchivo $file; done
done
